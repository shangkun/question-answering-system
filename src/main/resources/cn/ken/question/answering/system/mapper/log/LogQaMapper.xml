<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ken.question.answering.system.mapper.log.LogQaMapper">
  <resultMap id="ResultMap" type="cn.ken.question.answering.system.model.log.LogQa">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="session_id" jdbcType="VARCHAR" property="sessionId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="request_time" jdbcType="TIMESTAMP" property="requestTime" />
    <result column="knowledge_id" jdbcType="VARCHAR" property="knowledgeId" />
    <result column="classification_id" jdbcType="VARCHAR" property="classificationId" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="response_type" jdbcType="INTEGER" property="responseType" />
    <result column="response_time" jdbcType="TIMESTAMP" property="responseTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="access_number" jdbcType="INTEGER" property="accessNumber" />
  </resultMap>

  <sql id="table">log_qa</sql>

  <sql id="column">
    id,question,channel_id,session_id,user_id,
    request_time,knowledge_id,classification_id,answer,
    response_type,response_time,create_time,access_token
  </sql>

  <sql id="insertColumnValue">
    #{id},#{question},#{channelId},#{sessionId},
    #{userId},#{requestTime},#{knowledgeId},#{classificationId},#{answer},
    #{responseType},#{responseTime},#{createTime},#{accessToken}
  </sql>

  <insert id="insert">
    replace into
    <include refid="table"/>
    (<include refid="column"/>)
    values (<include refid="insertColumnValue"/>)
  </insert>

  <insert id="batchInsert">
    replace into
    <include refid="table"/>
    (<include refid="column"/>)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id},#{item.question},#{item.channelId},#{item.sessionId},
      #{item.userId},#{item.requestTime},#{item.knowledgeId},#{item.classificationId},#{item.answer},
      #{item.responseType},#{item.responseTime},#{item.createTime},#{item.accessToken})
    </foreach>
  </insert>

  <select id="selectById" resultMap="ResultMap">
    select
    <include refid="column"/>
    from
    <include refid="table"/>
    where id = #{id}
  </select>

  <select id="count" resultType="int">
    select
    count(id)
    from
    <include refid="table"/>
    where
    create_time &gt;= #{0} and create_time &lt; #{1}
  </select>

  <select id="countByAttribute" resultType="int">
    select
    count(id)
    from
    <include refid="table"/>
    where 1=1
    <if test="question!=null and question!=''">
      and question like concat('%',#{question},'%')
    </if>
    <if test="startTime!=null and startTime!='' and endTime!=null and endTime!=''">
      and create_time &gt;= #{startTime} and create_time &lt; #{endTime}
    </if>
    <if test="responseType!=null">
      and response_type = #{responseType}
    </if>
  </select>

  <select id="getKnowledgeRanking" resultMap="ResultMap">
    select
    max(knowledge_id) as knowledgeId,count(knowledge_id) as accessNumber
    from
    <include refid="table"/>
    where knowledge_id != '' and knowledge_id is not null
    <if test="startTime!=null and startTime!='' and endTime!=null and endTime!=''">
      and create_time &gt;= #{startTime} and create_time &lt; #{endTime}
    </if>
    <if test="channelId!=null">
      and channel_id = #{channelId}
    </if>
    <if test="responseTypeList!=null">
      and response_type in
      <foreach collection="responseTypeList" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    group by knowledge_id
    order by accessNumber desc
  </select>
</mapper>